<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration status="INFO">
      <properties>
            <!-- 配置日志存放的文件夹 -->
            <property name="LOG_HOME">MySendEmail-logs</property>
            <!-- 配置日志名称 -->
            <property name="LOG_NAME_HOME">MySendEmail</property>
        </properties>
     <appenders>
         <!--这个输出控制台的配置-->
         <console name="Console" target="SYSTEM_OUT">
             <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
             <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
             <!--输出日志的格式-->
             <PatternLayout pattern="[%d{yyyy/MM/dd HH:mm:ss-SSS}] [%p] ===> 【%F -- %L】：%m%n"/>
         </console>
         <!--文件会打印出所有信息，append=true程序每次启动追加内容，否则每次将清空-->
         <RollingFile name="FileLog" fileName="${LOG_HOME}/${LOG_NAME_HOME}.log" 
             filePattern="${LOG_HOME}/${LOG_NAME_HOME}_%d{yyyy-MM-dd}_%i.log" append="true">
             <!-- 只记录info日志 -->
             <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
             <!-- 记录的格式 -->
             <PatternLayout charset="UTF-8" pattern="[%d{yyyy/MM/dd HH:mm:ss-SSS}] [%p] ===>【%F--%L】：%msg%n"/>
             <!-- filepattern 中的日期格式精确位数决定了生成日志的日期单位， -->
             <Policies>
                  <!-- interval 决定该单位下的间隔数，时间单位为filePattern中设置的时间，如果在上面例子中 interval 设置为 1，那么就是1天生成一个日志； -->
                  <!-- 每隔十天生成一个文件 -->
                 <TimeBasedTriggeringPolicy interval="10" modulate="true" />
                  <!-- 文件最大为10M，超过则再生成一个文件 -->
                 <SizeBasedTriggeringPolicy size="10 MB" />
             </Policies>
             <!-- 配置说明: 只处理位于${LOG_HOME}文件夹下的*${LOG_NAME_HOME}*.log的文件的最后一次修改时间超过30天的文件-->
             <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了10000000 -->
             <DefaultRolloverStrategy max="10000000">
                <Delete basePath="${LOG_HOME}/" maxDepth="2">
                    <IfFileName glob="*${LOG_NAME_HOME}*.log" />
                    <!-- 日志文件超过30天删除 -->
                    <IfLastModified age="30d" />
                </Delete>
             </DefaultRolloverStrategy> 
         </RollingFile>
     </appenders>
     <Loggers>
        <!--过滤掉spring和mybatis的一些无用的DEBUG信息-->
        <logger name="org.springframework" level="TRACE" additivity="false"/>
        <!-- 打印SQL语句 -->
        <logger name="com.zxy.dpiserver.dao" level="TRACE" />
        <!-- Root level 是设置全局的默认信息显示级别，这里设置为info表示：info及以上的信息将被输出
        信息的级别大小为：fatal > error > warn > info > debug-->
        <Root level="debug">
          <!-- 输出到控制台 -->
          <AppenderRef ref="Console"/>
          <!-- 输出到文件 -->
          <AppenderRef ref="FileLog"/>
        </Root>
     </Loggers>
     
 </configuration>